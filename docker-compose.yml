version: "3.7"

services:
    web:
        image: trada:latest
        container_name: trada
        env_file:
            - .env
        command: python src/main.py 
        restart: always
        ports: 
            - "5000:5000"
        expose: 
            - 5000
        logging:
            driver: "json-file"
            options:
                max-size: "200M"
                max-file: "5"
        labels:
            - traefik.enable=true
            - traefik.http.services.web.loadbalancer.server.port=5000
            - traefik.http.routers.web.entrypoints=websecure
            - traefik.http.routers.web.rule=Host(`trada.fastapi.localhost`)
            - traefik.http.routers.web.tls=true
            - traefik.http.routers.web.tls.certresolver=leresolver
            - traefik.http.middlewares.web.redirectscheme.scheme=https
            - traefik.http.middlewares.web.redirectscheme.permanent=true
            - traefik.http.routers.web.middlewares=auth
            # default user -> user : password
            - traefik.http.middlewares.auth.basicauth.users=user:$$apr1$$q8eZFHjF$$Fvmkk//V6Btlaf2i/ju5n/
            # can export username and pass word in termial
            # export USERNAME=admin ; export PASSWORD=changethis; export HASHED_PASSWORD=$(openssl passwd -apr1 $PASSWORD)
            # - traefik.http.middlewares.admin-auth.basicauth.users=${USERNAME?Variable not set}:${HASHED_PASSWORD?Variable not set}
            - traefik.http.middlewares.auth.basicauth.headerField=X-WebAuth-User
            - traefik.http.middlewares.auth.basicauth.removeheader=true
            - traefik.http.middlewares.secured.chain.middlewares=https-only,known-ips,auth
            - traefik.http.middlewares.auth.basicauth.usersfile=/user
            - traefik.http.middlewares.https-only.redirectscheme.scheme=https
        networks:
            # Use the public network created to be shared between Traefik and
            # any other service that needs to be publicly available with HTTPS
            - traefik-public

    reverse-proxy:
        image: traefik:v2.4
        command: 
            - --log.level=DEBUG
            - --accesslog
            - --log
            - --api
            - --api.insecure
            - --providers.docker
            - --providers.docker.exposedbydefault=false
            - --entrypoints.web.address=:80
            - --entrypoints.websecure.address=:443
            - --entrypoints.web.http.redirections.entryPoint.to=websecure
            - --entrypoints.web.http.redirections.entryPoint.scheme=https
            - --entrypoints.web.http.redirections.entrypoint.permanent=true
            - --certificatesresolvers.leresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
            - --certificatesresolvers.leresolver.acme.email=bvngoc2000@gmail.com
            - --certificatesresolvers.leresolver.acme.storage=/acme.json
            - --certificatesresolvers.leresolver.acme.tlschallenge=true
        ports:
            - "80:80"
            - "8080:8080"
            - "443:443"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - "./acme.json:/acme.json"
            - "./user:/user"
            - traefik-public-certificates:/certificates
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            # Dashboard
            - "traefik.http.routers.traefik.rule=Host(`traefik.docker.localhost`)"
            - "traefik.http.routers.traefik.service=api@internal"
            - "traefik.http.routers.traefik.tls.certresolver=leresolver"
            - "traefik.http.routers.traefik.entrypoints=websecure"
            - "traefik.http.routers.traefik.middlewares=authtraefik"
            # defalult user: user password
            - "traefik.http.middlewares.authtraefik.basicauth.users=user:$$apr1$$q8eZFHjF$$Fvmkk//V6Btlaf2i/ju5n/"
            - "traefik.http.middlewares.authtraefik.basicauth.headerField=X-WebAuth-User"
            - "traefik.http.middlewares.authtraefik.basicauth.removeheader=true"
            - "traefik.http.middlewares.secured.chain.middlewares=https-only,known-ips,authtraefik"
            - "traefik.http.routers.traefik-https.middlewares=auth"
            # global redirect to https
            - "traefik.http.routers.http-catchall.rule=hostregexp(`localhost, chat.pythonistavn`)"
            - "traefik.http.routers.http-catchall.entrypoints=web"
            - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
            - "traefik.http.middlewares.https-only.redirectscheme.scheme=https"
            # middleware redirect
            - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

        networks:
            - traefik-public

volumes:
    traefik-public-certificates:

networks:
    traefik-public:
        external: true
